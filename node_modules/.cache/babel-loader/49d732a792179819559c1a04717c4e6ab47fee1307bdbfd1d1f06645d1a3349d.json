{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasha\\\\my-app\\\\src\\\\components\\\\TaskCard.jsx\";\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskCard({\n  task,\n  onSelect,\n  isSelected\n}) {\n  const {\n    id,\n    title,\n    description,\n    assignee,\n    dueDate,\n    status,\n    imgurl\n  } = task;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      onClick: onSelect,\n      className: `h-100 task-card ${isSelected ? 'border-success border-3' : ''}`,\n      style: {\n        cursor: 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-img-container\",\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: imgurl,\n          alt: title,\n          className: \"card-img-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0412\\u0438\\u043A\\u043E\\u043D\\u0443\\u0454:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), \" \", assignee, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0422\\u0435\\u0440\\u043C\\u0456\\u043D:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), \" \", dueDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), \" \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), isSelected && /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-center bg-success text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-check-circle-fill me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), \"\\u0412\\u0438\\u0431\\u0440\\u0430\\u043D\\u043E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","TaskCard","task","onSelect","isSelected","id","title","description","assignee","dueDate","status","imgurl","className","children","onClick","style","cursor","Img","variant","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","Footer","_c","$RefreshReg$"],"sources":["C:/Users/sasha/my-app/src/components/TaskCard.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction TaskCard({ task, onSelect, isSelected }) {\r\n  const { id, title, description, assignee, dueDate, status, imgurl } = task;\r\n\r\n  return (\r\n    <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n      <Card \r\n        onClick={onSelect}\r\n        className={`h-100 task-card ${isSelected ? 'border-success border-3' : ''}`}\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        <div className=\"card-img-container\">\r\n          <Card.Img variant=\"top\" src={imgurl} alt={title} className=\"card-img-top\" />\r\n        </div>\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          <Card.Text>\r\n            {description}<br />\r\n            <strong>Виконує:</strong> {assignee}<br />\r\n            <strong>Термін:</strong> {dueDate}<br />\r\n            <strong>Статус:</strong> {status}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        {isSelected && (\r\n          <Card.Footer className=\"text-center bg-success text-white\">\r\n            <i className=\"bi bi-check-circle-fill me-2\"></i>Вибрано\r\n          </Card.Footer>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}